data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
colnames(data_res) <- c("mean", "sd", "rr")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
knitr::opts_chunk$set(include = FALSE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
par(mfrow = c(2, 1))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
plot(data_res$sd,data_res$mean, main ="Riesgo v/s Retorno", xlab="Riesgo", ylab = "Retorno", col = c("red", "blue", "darkgreen"), pch = 23,  cex=1)
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$rr,main ="Retorno Ajustado por Riesgo", xlab="", ylab = "Retorno/Riesgo", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
colnames(data_res) <- c("mean", "sd", "rr")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
data_res
print(data_res)
knitr::opts_chunk$set(include = FALSE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
par(mfrow = c(2, 1))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
colnames(data_res) <- c("mean", "sd", "rr")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
plot(data_res$sd,data_res$mean, main ="Riesgo v/s Retorno", xlab="Riesgo", ylab = "Retorno", col = c("red", "blue", "darkgreen"), pch = 23,  cex=1)
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$rr,main ="Retorno Ajustado por Riesgo", xlab="", ylab = "Retorno/Riesgo", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
knitr::opts_chunk$set(include = TRUE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
par(mfrow = c(2, 1))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
colnames(data_res) <- c("mean", "sd", "rr")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
plot(data_res$sd,data_res$mean, main ="Riesgo v/s Retorno", xlab="Riesgo", ylab = "Retorno", col = c("red", "blue", "darkgreen"), pch = 23,  cex=1)
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$rr,main ="Retorno Ajustado por Riesgo", xlab="", ylab = "Retorno/Riesgo", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
Return.annualized(port[,1])
library(PerformanceAnalytics)
Return.annualized(port[,1])
Return.annualized(port[,2])
Return.annualized(port[,2],scale = NA, geometric = TRUE)
Return.annualized(port[,2],scale = NA, geometric = FALSE)
Return.annualized(port_ret[,2],scale = NA, geometric = TRUE)
Return.annualized(port_ret,scale = NA, geometric = TRUE)
Return.annualized(port_ret,geometric = TRUE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
par(mfrow = c(2, 1))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
Return.annualized(port_ret[,SPY],geometric = TRUE)
Return.annualized(port_ret[,1],geometric = TRUE)
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
#Return.annualized(port_ret,geometric = TRUE)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
#Return.annualized(port_ret,geometric = TRUE)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[2,4] <- Return.annualized(port_ret[,2],geometric = TRUE)
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
data_res[3,4] <- Return.annualized(port_ret[,3],geometric = TRUE)
colnames(data_res) <- c("ret", "sd", "rr","ret_anual")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
par(mfrow = c(2, 1))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
#Return.annualized(port_ret,geometric = TRUE)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
data_res
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[2,4] <- Return.annualized(port_ret[,2],geometric = TRUE)
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
data_res[3,4] <- Return.annualized(port_ret[,3],geometric = TRUE)
colnames(data_res) <- c("ret", "sd", "rr","ret_anual")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
Return.annualized(port_ret[,1],geometric = TRUE)
Return.annualized(port_ret[,2],geometric = TRUE)
Return.annualized(port_ret[,3],geometric = TRUE)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
View(data_res)
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
View(data_res)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
View(data_res)
data_res[2,4] <- Return.annualized(port_ret[,2],geometric = TRUE)
View(data_res)
data_res[3,4] <- Return.annualized(port_ret[,3],geometric = TRUE)
View(data_res)
colnames(data_res) <- c("ret", "sd", "rr","ret_anual")
rownames(data_res) <- c("SPY","WMO","QQQ")
plot(data_res$ret_anual,main ="Retorno Anualizado", xlab="", ylab = "%", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
port_ret[,-1]
View(port_ret)
port_ret+1
port_ret[,4:6] <-  port_ret[,4:6] +1
port_ret<-  port_ret[,4:6] +1
port_ret_cum <-  port_ret[,4:6] +1
port_ret_cum <-  port_ret+1
View(port_ret_cum)
port_ret_cum[,-1]
port_ret_cum[,-1]*port_ret_cum
port_ret_cum[,-1]*port_ret_cum[,1]
Return.cumulative(port_ret[,1],geometric=FALSE)
plot(Return.cumulative(port_ret[,1],geometric=FALSE))
plot(Return.cumulative(port_ret[,1],geometric=FALSE))
plot(Return.cumulative(port_ret[,1],geometric=FALSE))
port_ret_cum <- port_ret +1
View(port_ret_cum)
port_ret_cum[,1]
port_ret_cum[,-1]
port_ret_cum[,-2]
port_ret_cum[,-3]
port_ret_cum[1,]
port_ret_cum[-1,]
port_ret_cum[-1,] * port_ret_cum[1,]
port_ret_cum[-1,]/port_ret_cum[1,]
port_ret_cum[-1,]
port_ret_cum[-1,1]
port_ret_cum[1,1]
port_ret_cum[-1,1]/port_ret_cum[,1]
port_ret_cum[-1,1]
port_ret_cum[,1]
port_ret_cum[-1,1]/port_ret_cum[0,1]
port_ret_cum[-1,1]
port_ret_cum[0,1]
port_ret_cum[1,1]
port_ret_cum[1,]
ort_ret_cum[,1]
port_ret_cum[,1]
port_ret_cum[-1,1]/port_ret_cum[,1]
port_ret_cum[,1]
port_ret_cum[,1]/port_ret_cum[,1]
port_ret_cum[+1,1]
port_ret_cum[+1,0]
port_ret_cum[,1]
View(port_ret)
dif(port_ret_cum[,1])
diff(port_ret_cum[,1])
?diff
cumsum(port_ret_cum)
cumprod(port_ret)
cumprod(port)
cumsum(port)
cumsum(port_ret)
plot(cumsum(port_ret))
data_res[1,1] <- mean(port_ret$SPY)
plot(X=as.zoo(cumsum(port_ret)))
cumsum(port_ret)
data_res[1,1] <- mean(port_ret$SPY)
plot(X=as.zoo(cumsum(port_ret)))
plot(x=as.zoo(cumsum(port_ret)))
cummean(port_ret)
plot(cummean(port_ret))
plot(cummean(port))
plot(cummean(port$SPY))
plot(x=as.zoo(cumsum(port_ret)))
plot(x=as.zoo(cumsum(port_ret)))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = "Retorno Acumulado", col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"))
## E
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"))
knitr::opts_chunk$set(include = TRUE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
data_res[2,4] <- Return.annualized(port_ret[,2],geometric = TRUE)
data_res[3,4] <- Return.annualized(port_ret[,3],geometric = TRUE)
colnames(data_res) <- c("ret", "sd", "rr","ret_anual")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
plot(data_res$sd,data_res$mean, main ="Riesgo v/s Retorno", xlab="Riesgo", ylab = "Retorno", col = c("red", "blue", "darkgreen"), pch = 23,  cex=1)
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$rr,main ="Retorno Ajustado por Riesgo", xlab="", ylab = "Retorno/Riesgo", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$ret_anual,main ="Retorno Anualizado", xlab="", ylab = "%", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
## E
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"))
knitr::opts_chunk$set(include = TRUE)
if (!require("alphavantager")) install.packages("alphavantager")
library(alphavantager)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(ggplot2)
## Define variables
av_api_key("F11AG45Z8NP9EFPY")
desde <- '2014-12-31'
hasta <- '2022-01-01'
# Obtiene Datos de Alpha Vantage API
SPY <- av_get(symbol = "SPY", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
VMO <- av_get(symbol = "VMO", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
QQQ <- av_get(symbol = "QQQ", av_fun = "TIME_SERIES_DAiLY", outputsize="full") %>%
select(timestamp, close) %>%
filter(timestamp > desde, timestamp < hasta)
port <- merge((merge(SPY,VMO, by = "timestamp")),QQQ, by = "timestamp")
colnames(port) <- c("date","SPY", "VMO", "QQQ")
port <- xts(port[,2:4], order.by = port$date)
port_ret <- na.omit(diff(log(port)))
plot(x=as.zoo(port), main = "Precio de Cierre", legend =c("SPY", "WMO", "QQQ"),col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(port_ret), xlab="Time", ylab = c("SPY", "WMO", "QQQ"), main = "Retorno" , col = c("red", "blue", "darkgreen"), ylim=c(-0.10,0.10))
SPY_rr <- mean(port_ret$SPY)/ sd(port_ret$SPY)
VMO_rr <- mean(port_ret$VMO)/ sd(port_ret$VMO)
QQQ_rr <- mean(port_ret$QQQ)/ sd(port_ret$QQQ)
data_res <-  data.frame()
data_res[1,1] <- mean(port_ret$SPY)
data_res[1,2] <- sd(port_ret$SPY)
data_res[1,3] <- SPY_rr
data_res[2,1] <- mean(port_ret$VMO)
data_res[2,2] <- sd(port_ret$VMO)
data_res[2,3] <- VMO_rr
data_res[3,1] <- mean(port_ret$QQQ)
data_res[3,2] <- sd(port_ret$QQQ)
data_res[3,3] <- QQQ_rr
data_res[1,4] <- Return.annualized(port_ret[,1],geometric = TRUE)
data_res[2,4] <- Return.annualized(port_ret[,2],geometric = TRUE)
data_res[3,4] <- Return.annualized(port_ret[,3],geometric = TRUE)
colnames(data_res) <- c("ret", "sd", "rr","ret_anual")
rownames(data_res) <- c("SPY","WMO","QQQ")
print(data_res)
plot(data_res$sd,data_res$mean, main ="Riesgo v/s Retorno", xlab="Riesgo", ylab = "Retorno", col = c("red", "blue", "darkgreen"), pch = 23,  cex=1)
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$rr,main ="Retorno Ajustado por Riesgo", xlab="", ylab = "Retorno/Riesgo", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
plot(data_res$ret_anual,main ="Retorno Anualizado", xlab="", ylab = "%", col = c("red", "blue", "darkgreen"),pch = 23,  cex=1 )
legend(x="topleft", legend=c("SPY","WMO","QQQ"), fill = c("red", "blue", "darkgreen"))
## Compara el riesgo y retorno calculado, ¿Cuál se ve más atractivo?
## La opción que tiene una mejor relación retorno versus riesgo, es el QQQ, y que sería la más conveniente considerando que esta relación
## represente un comportamiento similar, también este ETF es el que mejor retorno anualizado ha mostrado, por lo que sustenta esta elección
##
## E
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.10,0.10)
m
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.10,0.10))
cumsum(port_ret)
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.8,0.8))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.20,0.20))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(0,0.2))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(0,2))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(0,1,5))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(0,1.5))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0,5,1.5))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.5,1.5))
plot(x=as.zoo(cumsum(port_ret)),main ="Retorno Acumulado", ylab = c("SPY", "WMO", "QQQ"), col = c("red", "blue", "darkgreen"),ylim=c(-0.2,1.5))
knit_with_parameters('G:/Mi unidad/Educación/Trabajos y análisis/jt/jt_fin.Rmd', encoding = 'UTF-8')
git commit -m "first commit"
